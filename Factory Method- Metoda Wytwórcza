#include <string>
#include <iostream>
#include <map>
using namespace std;

class User {
public:
	virtual void greet() const = 0;
	virtual ~User() {};
};

class Administrator : public User {
public:
	virtual void greet() const {
		cout <<" Witam. Jestem adminem" << endl;
	}
};
class PrivilegedUser : public User {
public:
	virtual void greet() const {
		cout << "Witam. Jestem uprzywilejowanym uzytkownikiem " << endl;
	}
};
class RegularUser : public User {
public:
	virtual void greet() const {
		cout << "Witam. Jestem zwyklym uzytkownikiem" << endl;
	}
};

class UserFactory {
public:
	virtual User* create() = 0;
};

class AdministratorFactory : public UserFactory
{
public:
	User* create()
	{
		return  new Administrator;
	}
};

class PrivilegedUserFactory : public UserFactory
{
public:
	User* create()
	{
		return new PrivilegedUser;
	}
};

class RegularUserFactory : public UserFactory
{
public:
	User* create()
	{
		return new RegularUser;
	}
};
int main() {

	map<string, UserFactory*> ProductsList;

	ProductsList.insert(pair<string, UserFactory*>("Administrator", new AdministratorFactory));
	ProductsList.insert(pair<string, UserFactory*>("PrivilegedUser", new PrivilegedUserFactory));
	ProductsList.insert(pair<string, UserFactory*>("RegularUser", new RegularUserFactory));

	cout << " Podaj nazwe uzytkownika, ktorego chcesz stworzyc: ";
	string co;
	cin >> co;
	

	User* x = ProductsList[co]->create();
	x->greet();
	delete x;
}
